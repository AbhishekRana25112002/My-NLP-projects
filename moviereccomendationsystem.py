# -*- coding: utf-8 -*-
"""MovieReccomendationSystem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d8ExB0cmKmhIzmuvDMFuy82cm5zZJzxV
"""

# Importing the dependencies
import numpy as np
import pandas as pd
import difflib

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

#Loading the data from the csv file to a pandas dataframe
movies_data=pd.read_csv('/content/movies.csv')

# movies_data.head()

# movies_data.shape

selected_features=['genres','keywords','tagline','cast','director']

# movies_data.isnull().sum()

for feature in selected_features:
  movies_data[feature]=movies_data[feature].fillna('')

# movies_data.isnull().sum()

combined_features=''
for feature in selected_features:
  combined_features+=movies_data[feature]+' '

# print(combined_features)

vectorizer=TfidfVectorizer()
feature_vectors=vectorizer.fit_transform(combined_features)

# print(feature_vectors)

similarity=cosine_similarity(feature_vectors)
# print(similarity)
# print(similarity.shape)

movie_name=input("Enter the name of the movie: ")

list_of_all_titles=movies_data['title'].tolist()
# print(list_of_all_titles)

close_match=difflib.get_close_matches(movie_name,list_of_all_titles)[0]
# print(close_match)

index_of_the_movie=movies_data[movies_data.title==close_match]['index'].values[0]
# print(index_of_the_movie)

similarity_score=list(enumerate(similarity[index_of_the_movie]))
# print(similarity_score)

sorted_similar_movies=sorted(similarity_score, key= lambda x:x[1], reverse=True)
# print(sorted_similar_movies)

i=1
for movie in sorted_similar_movies:
  index=movie[0]
  title_from_index=movies_data[movies_data.index==index]['title'].values[0]
  if(i<30):
    print(i,'.', title_from_index)
    i+=1